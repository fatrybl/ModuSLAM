name: Run tests

on: [ push, pull_request, workflow_dispatch ]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            libboost-all-dev \
            libtbb-dev \
            python3-venv \
            python3-dev \
            libeigen3-dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry to Use the Correct Python
        run: poetry env use $(which python)

      - name: Install project dependencies with Poetry
        run: poetry install --only=main,gtsam,test

      - name: Clone GTSAM (develop branch)
        run: |
          git clone --depth 1 --branch develop https://github.com/borglab/gtsam.git

      - name: Build and install GTSAM Python wrapper
        run: |
          cd gtsam
          PYTHON_EXECUTABLE=$(poetry run which python)  # Use Poetry's Python
          export CMAKE_GENERATOR=Ninja
          
          # Install ninja for faster builds
          sudo apt-get install -y ninja-build
          
          # flags are take from gtsam scripts for action runners
          cmake . \
            -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DGTSAM_BUILD_TESTS=OFF \
            -DGTSAM_BUILD_UNSTABLE=ON \
            -DGTSAM_USE_QUATERNIONS=OFF \
            -DGTSAM_WITH_TBB=ON \
            -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF \
            -DGTSAM_BUILD_WITH_MARCH_NATIVE=OFF \
            -DGTSAM_BUILD_PYTHON=ON \
            -DGTSAM_UNSTABLE_BUILD_PYTHON=ON \
            -DGTSAM_PYTHON_VERSION=3.11 \
            -DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE} \
            -DGTSAM_USE_BOOST_FEATURES=ON \
            -DGTSAM_ENABLE_BOOST_SERIALIZATION=ON \
            -DGTSAM_ALLOW_DEPRECATED_SINCE_V43=OFF \
            -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/gtsam_install
          
          # Build with reduced parallelism to avoid resource exhaustion
          cmake --build build -j2
          cmake --build build --target python-install

      - name: Set Test Data Directory
        run: echo "SRC_DIR=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          poetry run pytest tests
